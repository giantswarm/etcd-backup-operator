image:
  name: "giantswarm/etcd-backup-operator"
  tag: "[[ .Version ]]"
pod:
  user:
    id: 1000
  group:
    id: 1000
service:
  port: 8050
project:
  branch: "[[ .Branch ]]"
  commit: "[[ .SHA ]]"

registry:
  domain: docker.io

testingEnvironment: false
provider:
  kind: ""

aws:
  s3bucket: ""
  s3region: ""
  credentials:
    awsAccessKey: ""
    awsSecretKey: ""

schedules:
  - cronjob: "0 */6 * * *"
    clusters: ".*"
  # - cronjob: 0 */6 * * *
  #   clusters: '^(?!<cluster-id>)' #all clusters but the id defined
  # - cronjob: 0 3 * * * *
  #   clusters: '<cluster-id>' # only one cluster

etcdDataDir: ""
clientCertsDir: "/etc/kubernetes/ssl/etcd/"
clientCaCertFileName: ""
clientCertFileName: ""
clientKeyFileName: ""
etcdEndpoints: "https://127.0.0.1:2379"
skipManagementClusterBackup: false
installation: ""

verticalPodAutoscaler:
  enabled: true

# priorityClassName used by the pod.
priorityClassName: "giantswarm-critical"

# Add seccomp to pod security context
podSecurityContext:
  seccompProfile:
    type: RuntimeDefault

# Add seccomp to container security context
securityContext:
  seccompProfile:
    type: RuntimeDefault

# Set a password to enable backup encryption
etcdBackupEncryptionPassword: ""
